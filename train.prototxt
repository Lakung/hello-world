name:"Chinese_recog_net"
layer{
  type:"Data"
  top:"data"
  top:"label"
  include{
	phase:TRAIN
  }
  transform_param{
  	mean_file:"examples/cifar10/mean.binaryproto"
  }
  data_param{
 	source:"examples/cifar10/cifar10_train_lmdb"
	batch_size:100
	backend: LMDB
  }
}

layer{
  bottom:"data"
  top:"conv1"
  name:"conv1"
  type:"Convolution"
  convolution_param{
  	num_output:64
	kernel_size:3
	pad:1
	stride:1
  }
}

layer{
  bottom:"conv1"
  top:"batch_1"
  name:"batch_1"
  type:"BatchNorm"
  batch_norm_param{
	use_global_stats: true
  }
}

layer{
  bottom:"conv1"
  top:"scale1"
  name:"scale1"
  type:"Scale"
  scale_param{
	bias_term:true
  }
}

layer{
  bottom:"conv1"
  top:"relu1"
  name:"relu1"
  type:"ReLu"
}

layer{
  bottom:"relu1"
  top:"pool1"
  name:"pool1"
  type:"Pooling"
  pooling_param{
	kernel_size:3
	stride:2
	pool:AVE
  }
}

layer{
  bottom:"pool1"
  top:"conv2"
  name:"conv2"
  type:"Convolution"
  convolution_param{
  	num_output:96
	kernel_size:3
	pad:1
	stride:1
  }
}

layer{
  bottom:"conv2"
  top:"batch_2"
  name:"batch_2"
  type:"BatchNorm"
  batch_norm_param{
	use_global_stats: true
  }
}

layer{
  bottom:"conv2"
  top:"scale2"
  name:"scale2"
  type:"Scale"
  scale_param{
	bias_term:true
  }
}

layer{
  bottom:"conv2"
  top:"relu2"
  name:"relu2"
  type:"ReLu"
}

layer{
  bottom:"relu2"
  top:"pool2"
  name:"pool2"
  type:"Pooling"
  pooling_param{
	kernel_size:3
	stride:2
	pool:AVE
  }
}

layer{
  bottom:"pool2"
  top:"conv3_1"
  name:"conv3_1"
  type:"Convolution"
  convolution_param{
  	num_output:128
	kernel_size:3
	pad:1
	stride:1
  }
}

layer{
  bottom:"conv3_1"
  top:"conv3_2"
  name:"conv3_2"
  type:"Convolution"
  convolution_param{
	num_output:128
	kernel_size:3
	pad:1
	stride:1
  }
}

layer{
  bottom:"conv3_2"
  top:"batch_3"
  name:"batch_3"
  type:"BatchNorm"
  batch_norm_param{
	use_global_stats: true
  }
}

layer{
  bottom:"conv3_2"
  top:"scale3"
  name:"scale3"
  type:"Scale"
  scale_param{
	bias_term:true
  }
}

layer{
  bottom:"conv3_2"
  top:"relu3"
  name:"relu3"
  type:"ReLu"
}

layer{
  bottom:"relu3"
  top:"pool3"
  name:"pool3"
  type:"Pooling"
  pooling_param{
	kernel_size:3
	stride:2
	pool:AVE
  }
}

layer{
  bottom:"pool3"
  top:"conv4_1"
  name:"conv4_1"
  type:"Convolution"
  convolution_param{
	num_output:256
	kernel_size:3
	pad:1
	stride:1
  }
}

layer{
  bottom:"conv4_2"
  top:"batch_4"
  name:"batch_4"
  type:"BatchNorm"
  batch_norm_param{
	use_global_stats: true
  }
}

layer{
  bottom:"conv4_2"
  top:"scale4"
  name:"scale4"
  type:"Scale"
  scale_param{
	bias_term:true
  }
}

layer{
  bottom:"conv4_2"
  top:"relu4"
  name:"relu4"
  type:"ReLu"
}

layer{
  bottom:"relu4"
  top:"pool4"
  name:"pool4"
  type:"Pooling"
  pooling_param{
	kernel_size:2
	stride:2
	pool:AVE
  }
}

layer{
  bottom:"pool4"
  top:"fc1"
  name:"fc1"
  type:"InnerProduct"
  inner_product_param{
	num_output:3074
  }
}

layer{
  bottom:"fc1"
  top:"prob"
  name:"prob"
  type:"Softmax"
}
